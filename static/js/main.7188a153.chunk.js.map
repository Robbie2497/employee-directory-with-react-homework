{"version":3,"sources":["utils/API.js","components/TableRow.js","components/TableHead.js","components/StateOptions.js","components/EmployeeTable.js","App.js","serviceWorker.js","index.js"],"names":["axios","get","TableRow","props","name","first","last","dob","age","phone","email","src","picture","medium","alt","TableHead","StateDropDown","title","items","multiSelect","useState","open","setOpen","selection","setSelection","toggle","handleClickOutside","tabIndex","role","onKeyPress","onClick","className","map","item","key","value","type","some","current","selectionAferRemoval","filter","handleOnClick","isItemInSelection","label","Table","users","setUsers","useEffect","API","then","data","results","console","log","user","id","usersCopy","sort","a","b","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7188a153.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n\n  getUsers: function() {\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n  }\n};","import React from \"react\";\n\n\n\nexport const TableRow = (props) => {\n\n    return (\n            <tbody>\n                <tr>\n                    <td>{props.name.first}</td>\n                    <td>{props.name.last} </td>\n                    <td>{props.dob.age}</td>\n                    <td>{props.phone}</td>\n                    <td>{props.email}</td>\n                    <td><img src={props.picture.medium} alt=\"\" /> </td>\n                </tr>\n            </tbody>\n    )\n}","import React from \"react\";\n\nexport const TableHead = () => {\n\n    return (\n\n\n\n<tr>\n  <th>First Name</th>\n  <th>Last Name</th>\n  <th>Age</th>\n  <th>Phone</th>\n  <th>Email</th>\n  <th>Photo</th>\n</tr>\n\n\n\n    )\n}\n","import React, {useState} from 'react';\n// import onClickOutside from 'react-onclickoutside';\n\n function StateDropDown({ title, items = [], multiSelect = false }) {\n    const [open, setOpen] = useState(false);\n    const [selection, setSelection] = useState([]);\n    const toggle = () => setOpen(!open);\n    StateDropDown.handleClickOutside = () => setOpen(false);\n\n    function handleOnClick(item) {\n        if(!selection.some(current => current.value === item.value)) {\n            if (!multiSelect) {\n                setSelection([item]);\n            } else if (multiSelect) {\n                setSelection([...selection, item]);\n            }\n        } else {\n            let selectionAferRemoval = selection;\n            selectionAferRemoval = selectionAferRemoval.filter(\n                current => current.value !== item.value\n            );\n            setSelection([...selectionAferRemoval])\n        }\n    }\n\n    function isItemInSelection (item) {\n        if (selection.some(current => current.value === item.value)) {\n            return true;\n        }\n        return false;\n    }\n\n    return (\n        <div tabIndex={0} \n        role=\"button\" \n        onKeyPress={() => toggle(!open)} \n        onClick={() => toggle(!open)}\n        >\n            <div>\n                <p className=\"btn btn-secondary dropdown-toggle\">{open ? 'Close' : 'Filter by location'}</p>\n            </div>\n            {open && (\n                <ul className=\"scroll list-group\" >\n                    {items.map(item => (\n                        <li key = {item.value} className=\"list-group-item\">\n                            <button type=\"button\" className=\"btn-sm listItems\" onClick={() => handleOnClick(item)}>\n                                <span>{item.value}</span>\n                                <span>{isItemInSelection(item) && ' Selected'}</span>\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n\n    );\n}\n// const clickOutsideConfig = {\n//     handleClickOutside: () => StateDropDown.handleClickOutside,\n// };\n\nexport default StateDropDown;\n// onClickOutside(StateDropDown, clickOutsideConfig);","import React, { useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport { TableRow } from \"./TableRow\";\nimport { TableHead } from \"./TableHead\";\nimport StateDropDown from \"./StateOptions\";\n\nconst items = [\n\n    { label: 'ALABAMA', value: 'ALABAMA' },\n    { label: \"ALASKA\", value: 'ALASKA' },\n    { label: \"ARIZONA\", value: 'ARIZONA' },\n    { label: \"ARKANSAS\", value: 'ARKANSAS' },\n    { label: \"CALIFORNIA\", value: 'CALIFORNIA' },\n    { label: \"COLORADO\", value: 'COLORADO' },\n    { label: \"CONNECTICUT\", value: 'CONNECTICUT' },\n    { label: \"DELAWARE\", value: 'DELAWARE' },\n    { label: \"FLORIDA\", value: 'FLORIDA' },\n    { label: \"GEORGIA\", value: 'GEORGIA' },\n    { label: \"HAWAII\", value: 'HAWAII' },\n    { label: \"IDAHO\", value: 'IDAHO' },\n    { label: \"ILLINOIS\", value: 'ILLINOIS' },\n    { label: \"INDIANA\", value: 'INDIANA' },\n    { label: \"IOWA\", value: 'IOWA' },\n    { label: \"KANSAS\", value: 'KANSAS' },\n    { label: \"KENTUCKY\", value: 'KENTUCKY' },\n    { label: \"LOUISIANA\", value: 'LOUISIANA' },\n    { label: \"MAINE\", value: 'MAINE' },\n    { label: \"MARYLAND\", value: 'MARYLAND' },\n    { label: \"MASSACHUSETTS\", value: 'MASSACHUSETTS' },\n    { label: \"MICHIGAN\", value: 'MICHIGAN' },\n    { label: \"MINNESOTA\", value: 'MINNESOTA' },\n    { label: \"MISSISSIPPI\", value: 'MISSISSIPPI' },\n    { label: \"MISSOURI\", value: 'MISSOURI' },\n    { label: \"MONTANA\", value: 'MONTANA' },\n    { label: \"NEBRASKA\", value: 'NEBRASKA' },\n    { label: \"NEVADA\", value: 'NEVADA' },\n    { label: \"NEW HAMPSHIRE\", value: 'NEW HAMPSHIRE' },\n    { label: \"NEW JERSEY\", value: 'NEW JERSEY' },\n    { label: \"NEW MEXICO\", value: 'NEW MEXICO' },\n    { label: \"NEW YORK\", value: 'NEW YORK' },\n    { label: \"NORTH CAROLINA\", value: 'NORTH CAROLINA' },\n    { label: \"NORTH DAKOTA\", value: 'NORTH DAKOTA' },\n    { label: \"OHIO\", value: 'OHIO' },\n    { label: \"OKLAHOMA\", value: 'OKLAHOMA' },\n    { label: \"OREGON\", value: 'OREGON' },\n    { label: \"PENNSYLVANIA\", value: 'PENNSYLVANIA' },\n    { label: \"RHODE ISLAND\", value: 'RHODE ISLAND' },\n    { label: \"SOUTH CAROLINA\", value: 'SOUTH CAROLINA' },\n    { label: \"SOUTH DAKOTA\", value: 'SOUTH DAKOTA' },\n    { label: \"TENNESSEE\", value: 'TENNESSEE' },\n    { label: \"TEXAS\", value: 'TEXAS' },\n    { label: \"UTAH\", value: 'UTAH' },\n    { label: \"VERMONT\", value: 'VERMONT' },\n    { label: \"VIRGINIA\", value: 'VIRGINIA' },\n    { label: \"WASHINGTON\", value: 'WASHINGTON' },\n    { label: \"WEST VIRGINIA\", value: 'WEST VIRGINIA' },\n    { label: \"WISCONSIN\", value: 'WISCONSIN' },\n    { label: \"WYOMING\", value: 'WYOMING' }\n]\n\n\n\n\nconst Table = () => {\n    const [users, setUsers] = useState([]);\n\n\n    useEffect(() => {\n        API.getUsers()\n            .then(data => {\n                setUsers(data.data.results)\n            })\n    }, [])\n\n    useEffect(() => console.log(users), [users]);\n\n    function sort() {\n        let usersCopy = [...users]\n        usersCopy.sort(function (a, b) {\n            return a.dob.age - b.dob.age;\n        });\n        setUsers(usersCopy);\n        console.log(users);\n\n    }\n\n\n\n\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-12\">\n<h1>Welcome to the Employee Directory</h1>\n                </div>\n            </div>\n            <br />\n            <br />\n\n            <div className=\"row\">\n                <div className=\"col-sm-8\">\n\n                    <table>\n                        <thead>\n                            <TableHead />\n                        </thead>\n\n                        {users.map(user => <TableRow key={user.id.value} {...user} />)}\n\n                    </table>\n                </div>\n                <div className=\"col-sm-2\">\n                    <button className=\"btn btn-secondary\" onClick={sort} >Sort by age</button>\n                </div>\n                <div className=\"col-sm-1\">\n                    <StateDropDown title=\"Filter by state\" items={items} />\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\n\nexport default Table;","import React from 'react';\nimport './App.css';\nimport Table from './components/EmployeeTable';\n\n\n\nfunction App() {\n  return (\n\n    <div>\n      <Table />\n    </div>\n\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}